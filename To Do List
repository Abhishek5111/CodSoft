{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "9d1a4792",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "To-Do List Menu\n",
      "1. View To-Do List\n",
      "2. Add Task\n",
      "3. Update Task\n",
      "4. Remove Task\n",
      "5. Exit\n",
      "Enter your choice: 2\n",
      "Enter a new task: Take the Dog out\n",
      "'Take the Dog out' has been added to your to-do list.\n",
      "\n",
      "To-Do List Menu\n",
      "1. View To-Do List\n",
      "2. Add Task\n",
      "3. Update Task\n",
      "4. Remove Task\n",
      "5. Exit\n",
      "Enter your choice: 3\n",
      "Enter the number of the task to update: 1\n",
      "Enter the updated task: Complete Assignment\n",
      "Task 1 has been updated to 'Complete Assignment'.\n",
      "\n",
      "To-Do List Menu\n",
      "1. View To-Do List\n",
      "2. Add Task\n",
      "3. Update Task\n",
      "4. Remove Task\n",
      "5. Exit\n",
      "Enter your choice: 4\n",
      "Enter the number of the task to remove: 1\n",
      "'Complete Assignment' has been removed from your to-do list.\n",
      "\n",
      "To-Do List Menu\n",
      "1. View To-Do List\n",
      "2. Add Task\n",
      "3. Update Task\n",
      "4. Remove Task\n",
      "5. Exit\n",
      "Enter your choice: 5\n",
      "Exiting the To-Do List application. Goodbye!\n"
     ]
    }
   ],
   "source": [
    "import sys\n",
    "\n",
    "MAX_TASKS = 10\n",
    "todo_list = []\n",
    "\n",
    "def display_menu():\n",
    "    print(\"\\nTo-Do List Menu\")\n",
    "    print(\"1. View To-Do List\")\n",
    "    print(\"2. Add Task\")\n",
    "    print(\"3. Update Task\")\n",
    "    print(\"4. Remove Task\")\n",
    "    print(\"5. Exit\")\n",
    "\n",
    "def view_todo_list():\n",
    "    if not todo_list:\n",
    "        print(\"\\nYour to-do list is empty.\")\n",
    "    else:\n",
    "        print(\"\\nTo-Do List:\")\n",
    "        for index, task in enumerate(todo_list, start=1):\n",
    "            print(f\"{index}. {task}\")\n",
    "\n",
    "def add_task():\n",
    "    if len(todo_list) >= MAX_TASKS:\n",
    "        print(f\"\\nCannot add more than {MAX_TASKS} tasks.\")\n",
    "    else:\n",
    "        task = input(\"Enter a new task: \")\n",
    "        todo_list.append(task)\n",
    "        print(f\"'{task}' has been added to your to-do list.\")\n",
    "\n",
    "def update_task():\n",
    "    try:\n",
    "        task_number = int(input(\"Enter the number of the task to update: \"))\n",
    "        if 1 <= task_number <= len(todo_list):\n",
    "            new_task = input(\"Enter the updated task: \")\n",
    "            todo_list[task_number - 1] = new_task\n",
    "            print(f\"Task {task_number} has been updated to '{new_task}'.\")\n",
    "        else:\n",
    "            print(\"Invalid task number.\")\n",
    "    except ValueError:\n",
    "        print(\"Please enter a valid number.\")\n",
    "\n",
    "def remove_task():\n",
    "    try:\n",
    "        task_number = int(input(\"Enter the number of the task to remove: \"))\n",
    "        if 1 <= task_number <= len(todo_list):\n",
    "            removed_task = todo_list.pop(task_number - 1)\n",
    "            print(f\"'{removed_task}' has been removed from your to-do list.\")\n",
    "        else:\n",
    "            print(\"Invalid task number.\")\n",
    "    except ValueError:\n",
    "        print(\"Please enter a valid number.\")\n",
    "\n",
    "def exit_program():\n",
    "    print(\"Exiting the To-Do List application. Goodbye!\")\n",
    "    try:\n",
    "        sys.exit()\n",
    "    except SystemExit:\n",
    "        pass\n",
    "\n",
    "def main():\n",
    "    while True:\n",
    "        display_menu()\n",
    "        choice = input(\"Enter your choice: \")\n",
    "        \n",
    "        if choice == '1':\n",
    "            view_todo_list()\n",
    "        elif choice == '2':\n",
    "            add_task()\n",
    "        elif choice == '3':\n",
    "            update_task()\n",
    "        elif choice == '4':\n",
    "            remove_task()\n",
    "        elif choice == '5':\n",
    "            exit_program()\n",
    "            break\n",
    "        else:\n",
    "            print(\"Invalid choice. Please choose a number from 1 to 5.\")\n",
    "\n",
    "if __name__ == \"__main__\":\n",
    "    main()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3db22b63",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4f0c3f52",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "cb34a45e",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
